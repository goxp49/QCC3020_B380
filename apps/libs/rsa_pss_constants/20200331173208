/****************************************************************************
Generated from D:\workshop\QCC3020-Project\C036_SINGLE_PATCH\apps\applications\earbud\qcc512x_qcc302x\QCC3020-AA_DEV-BRD-R2-AA\dfu\dfu-public.key
by C:\qtil\ADK_QCC512X_QCC302X_WIN_6.4.0.41\tools\gen_rsa_pss_constants.py
at 15:16:01 08/01/2020

FILE NAME
    rsa_pss_constants.c

DESCRIPTION
    Constant data needed for the rsa_decrypt and the ce_pkcs1_pss_padding_verify
    function.

NOTES
    The constant data for the rsa_decrypt is generated by the host from the
    RSA public key and compiled into the rsa_pss_constants library.
    It is directly related to the RSA private and public key pair, and if they
    change then this file must be regenerated from the public key.

****************************************************************************/

#include "rsa_decrypt.h"

/*
 * The const rsa_mod_t *mod parameter for the rsa_decrypt function.
 */
const rsa_mod_t rsa_decrypt_constant_mod = {
    /* uint16 M[RSA_SIGNATURE_SIZE] where RSA_SIGNATURE_SIZE is 128 */
    {
        0xd451,     /* 00 */
        0x581d,     /* 01 */
        0x22c7,     /* 02 */
        0xff36,     /* 03 */
        0xc230,     /* 04 */
        0x8963,     /* 05 */
        0xc8d8,     /* 06 */
        0xa526,     /* 07 */
        0xfb38,     /* 08 */
        0xe6f6,     /* 09 */
        0xe597,     /* 10 */
        0x1254,     /* 11 */
        0x3552,     /* 12 */
        0xc75f,     /* 13 */
        0x6f6c,     /* 14 */
        0xd111,     /* 15 */
        0xd9f3,     /* 16 */
        0x666d,     /* 17 */
        0xbb9c,     /* 18 */
        0x7a33,     /* 19 */
        0xd9fa,     /* 20 */
        0x87c5,     /* 21 */
        0xce3c,     /* 22 */
        0xace4,     /* 23 */
        0x0ba2,     /* 24 */
        0xcf12,     /* 25 */
        0x96dc,     /* 26 */
        0x9d83,     /* 27 */
        0x63f8,     /* 28 */
        0xf074,     /* 29 */
        0xdf1b,     /* 30 */
        0x2036,     /* 31 */
        0xac61,     /* 32 */
        0x8dc7,     /* 33 */
        0x0b93,     /* 34 */
        0x000e,     /* 35 */
        0x95ab,     /* 36 */
        0x509a,     /* 37 */
        0xc44c,     /* 38 */
        0x66f1,     /* 39 */
        0x4f0e,     /* 40 */
        0x6deb,     /* 41 */
        0x79ae,     /* 42 */
        0x8e0e,     /* 43 */
        0xd0ab,     /* 44 */
        0x7361,     /* 45 */
        0x39ed,     /* 46 */
        0x5228,     /* 47 */
        0x2e1d,     /* 48 */
        0xd55a,     /* 49 */
        0x9164,     /* 50 */
        0xe9df,     /* 51 */
        0x2501,     /* 52 */
        0x0e41,     /* 53 */
        0xf815,     /* 54 */
        0xcab1,     /* 55 */
        0x1f4d,     /* 56 */
        0xdaba,     /* 57 */
        0x0aad,     /* 58 */
        0x4c78,     /* 59 */
        0xd7ae,     /* 60 */
        0x2eba,     /* 61 */
        0x707d,     /* 62 */
        0xf39d,     /* 63 */
        0x7f08,     /* 64 */
        0xd2c5,     /* 65 */
        0xefab,     /* 66 */
        0x0bb8,     /* 67 */
        0xee8f,     /* 68 */
        0xb6ce,     /* 69 */
        0x8f51,     /* 70 */
        0xbdee,     /* 71 */
        0x311e,     /* 72 */
        0xc46c,     /* 73 */
        0xa8db,     /* 74 */
        0x2176,     /* 75 */
        0x453f,     /* 76 */
        0xdcf7,     /* 77 */
        0x64d1,     /* 78 */
        0xb3f1,     /* 79 */
        0x2cb6,     /* 80 */
        0x309b,     /* 81 */
        0x358b,     /* 82 */
        0xe409,     /* 83 */
        0xa134,     /* 84 */
        0xa34c,     /* 85 */
        0xe055,     /* 86 */
        0x8d7f,     /* 87 */
        0x6c9e,     /* 88 */
        0x7775,     /* 89 */
        0x0bab,     /* 90 */
        0xeb8c,     /* 91 */
        0xc06b,     /* 92 */
        0xfbbd,     /* 93 */
        0x374d,     /* 94 */
        0xc466,     /* 95 */
        0xa249,     /* 96 */
        0x9e4f,     /* 97 */
        0xa1fe,     /* 98 */
        0x2410,     /* 99 */
        0x92ba,     /* 100 */
        0x4791,     /* 101 */
        0x2b7d,     /* 102 */
        0x965e,     /* 103 */
        0xba21,     /* 104 */
        0xe956,     /* 105 */
        0x3924,     /* 106 */
        0xd414,     /* 107 */
        0x03d8,     /* 108 */
        0xad65,     /* 109 */
        0x1ee6,     /* 110 */
        0x7013,     /* 111 */
        0x7dff,     /* 112 */
        0xa94d,     /* 113 */
        0x0fcd,     /* 114 */
        0xe86c,     /* 115 */
        0x543f,     /* 116 */
        0x594d,     /* 117 */
        0x96a8,     /* 118 */
        0x21a2,     /* 119 */
        0xb2fa,     /* 120 */
        0x96eb,     /* 121 */
        0x4523,     /* 122 */
        0xde63,     /* 123 */
        0x3835,     /* 124 */
        0x7877,     /* 125 */
        0x027d,     /* 126 */
        0x9049      /* 127 */
    },
    /* uint16 M_dash */
    0x9e07
};

/* 
 * The "lump of memory passed in initialised to R^2N mod M" needed for the
 * uint16 *A parameter for the rsa_decrypt function. This must be copied into
 * a writable array of RSA_SIGNATURE_SIZE uint16 from here before use.
 */
const  uint16 rsa_decrypt_constant_sign_r2n[RSA_SIGNATURE_SIZE] = {
    0xb9f0,     /* 00 */
    0x7d90,     /* 01 */
    0x09a5,     /* 02 */
    0x8251,     /* 03 */
    0xc4e2,     /* 04 */
    0x3ece,     /* 05 */
    0x0b67,     /* 06 */
    0x5bfd,     /* 07 */
    0x8006,     /* 08 */
    0xc4e8,     /* 09 */
    0x84d0,     /* 10 */
    0x1ae2,     /* 11 */
    0xdac0,     /* 12 */
    0x79f3,     /* 13 */
    0x63aa,     /* 14 */
    0x5712,     /* 15 */
    0x6d07,     /* 16 */
    0xa7be,     /* 17 */
    0xc465,     /* 18 */
    0xe04f,     /* 19 */
    0x9e18,     /* 20 */
    0x3ef1,     /* 21 */
    0x410c,     /* 22 */
    0x4e2f,     /* 23 */
    0x693a,     /* 24 */
    0x097b,     /* 25 */
    0xd13d,     /* 26 */
    0x17fa,     /* 27 */
    0x5cc7,     /* 28 */
    0xec0c,     /* 29 */
    0x3f45,     /* 30 */
    0x912c,     /* 31 */
    0xbe07,     /* 32 */
    0xaa0d,     /* 33 */
    0x0fdd,     /* 34 */
    0x2839,     /* 35 */
    0x4c0a,     /* 36 */
    0xad93,     /* 37 */
    0x1a38,     /* 38 */
    0x7dad,     /* 39 */
    0x070b,     /* 40 */
    0x608b,     /* 41 */
    0xb50d,     /* 42 */
    0xd03d,     /* 43 */
    0x466e,     /* 44 */
    0xd408,     /* 45 */
    0xf823,     /* 46 */
    0x3eb9,     /* 47 */
    0xe965,     /* 48 */
    0x2e61,     /* 49 */
    0x1a6c,     /* 50 */
    0xba4a,     /* 51 */
    0x4250,     /* 52 */
    0xaf70,     /* 53 */
    0x22fa,     /* 54 */
    0x70a5,     /* 55 */
    0x67a0,     /* 56 */
    0xa814,     /* 57 */
    0x027a,     /* 58 */
    0xba42,     /* 59 */
    0xb101,     /* 60 */
    0x20a2,     /* 61 */
    0x1920,     /* 62 */
    0xdecc,     /* 63 */
    0xab65,     /* 64 */
    0xc864,     /* 65 */
    0xf340,     /* 66 */
    0xa334,     /* 67 */
    0xcd0a,     /* 68 */
    0x4064,     /* 69 */
    0x0f48,     /* 70 */
    0x01e7,     /* 71 */
    0xf758,     /* 72 */
    0x612a,     /* 73 */
    0xae1d,     /* 74 */
    0x11c8,     /* 75 */
    0x9532,     /* 76 */
    0x24d4,     /* 77 */
    0x3d96,     /* 78 */
    0x3472,     /* 79 */
    0x2012,     /* 80 */
    0x136a,     /* 81 */
    0xab20,     /* 82 */
    0x0c8e,     /* 83 */
    0xd16c,     /* 84 */
    0xc746,     /* 85 */
    0xe7cf,     /* 86 */
    0xf7d0,     /* 87 */
    0x00dd,     /* 88 */
    0x3250,     /* 89 */
    0x26fb,     /* 90 */
    0xe536,     /* 91 */
    0x5c1e,     /* 92 */
    0xfc4b,     /* 93 */
    0x0cc4,     /* 94 */
    0x5f3f,     /* 95 */
    0x81bf,     /* 96 */
    0xf4cc,     /* 97 */
    0xf645,     /* 98 */
    0xeed5,     /* 99 */
    0xdbdc,     /* 100 */
    0x65f9,     /* 101 */
    0x051b,     /* 102 */
    0x93b0,     /* 103 */
    0xe826,     /* 104 */
    0x52a5,     /* 105 */
    0x8a12,     /* 106 */
    0x43ce,     /* 107 */
    0xbecc,     /* 108 */
    0xa4a7,     /* 109 */
    0x2479,     /* 110 */
    0xee90,     /* 111 */
    0x1d56,     /* 112 */
    0xabe0,     /* 113 */
    0xf5ed,     /* 114 */
    0xc0d3,     /* 115 */
    0x9530,     /* 116 */
    0x2970,     /* 117 */
    0x8696,     /* 118 */
    0xd95f,     /* 119 */
    0xb583,     /* 120 */
    0x410e,     /* 121 */
    0xab17,     /* 122 */
    0x3abd,     /* 123 */
    0xe4d1,     /* 124 */
    0x77fb,     /* 125 */
    0xe607,     /* 126 */
    0xfcbb      /* 127 */
};

/*
 * The value to be provided for the saltlen parameter to the 
 * ce_pkcs1_pss_padding_verify function used to decode the PSS padded SHA-256
 * hash. It has to match the value that was used in the encoding process.
 */
const unsigned long ce_pkcs1_pss_padding_verify_constant_saltlen = 222;
